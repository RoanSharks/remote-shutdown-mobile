name: Build Android APK

on:
  push:
    branches: [main]
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '17'

      - name: Setup Android SDK
        uses: android-actions/setup-android@v3
        env:
          SKIP_JDK_VERSION_CHECK: true
          JAVA_HOME: /opt/hostedtoolcache/Java_Temurin-Hotspot_jdk/17.0.16-8/x64

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.11"

      - name: Install system dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y \
            python3-pip \
            build-essential \
            git \
            zip \
            unzip \
            wget \
            curl \
            python3-setuptools \
            python3-dev \
            libffi-dev \
            libssl-dev

      - name: Install build dependencies (autotools for libffi)
        run: |
          sudo apt-get update
          sudo apt-get install -y \
            autoconf \
            automake \
            libtool \
            pkg-config \
            cmake

      - name: Install native build dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y build-essential libtool automake autoconf m4 pkg-config zlib1g-dev libssl-dev

      - name: Install Python dependencies
        run: |
          pip install --upgrade pip
          pip install cython==0.29.33
          pip install python-for-android

      - name: Accept Android licenses
        run: |
          export JAVA_HOME=/opt/hostedtoolcache/Java_Temurin-Hotspot_jdk/17.0.16-8/x64
          export PATH=$JAVA_HOME/bin:$PATH
          yes | sdkmanager --licenses

      - name: Install Android components
        run: |
          export JAVA_HOME=/opt/hostedtoolcache/Java_Temurin-Hotspot_jdk/17.0.16-8/x64
          export PATH=$JAVA_HOME/bin:$PATH
          sdkmanager "platform-tools" "platforms;android-29" "build-tools;29.0.3" "ndk;25.2.9519653"

      - name: Build APK with Python-for-Android directly
        run: |
          echo "=== Building APK with P4A directly ==="
          
          # Java 17 for Android SDK tools
          export JAVA_HOME=/opt/hostedtoolcache/Java_Temurin-Hotspot_jdk/17.0.16-8/x64
          export PATH=$JAVA_HOME/bin:$PATH
          
          # Android environment
          export ANDROID_HOME=/usr/local/lib/android/sdk
          export ANDROID_SDK_ROOT=/usr/local/lib/android/sdk
          export ANDROIDAPI=29
          export ANDROIDNDK=/usr/local/lib/android/sdk/ndk/25.2.9519653
          export PATH=$ANDROID_HOME/build-tools/29.0.3:$ANDROID_HOME/platform-tools:$PATH
          
          # Debug environment
          echo "JAVA_HOME=$JAVA_HOME"
          java -version
          which aidl || echo "aidl not found"
          
          # Build APK
          p4a apk \
            --private . \
            --package=com.tarbunny.remote_controller \
            --name="Remote Controller" \
            --version=1.0 \
            --bootstrap=sdl2 \
            --requirements=python3,kivy,requests,urllib3 \
            --permissions=INTERNET,ACCESS_NETWORK_STATE \
            --arch=arm64-v8a \
            --release \
            --sdk-dir=$ANDROID_HOME \
            --ndk-dir=$ANDROIDNDK \
            --android-api=$ANDROIDAPI \
            --ndk-api=21

      - name: Find APK
        run: |
          find . -name "*.apk" -type f || echo "No APK found"
          ls -la bin/ || echo "No bin directory"

      - name: Upload APK
        uses: actions/upload-artifact@v4
        with:
          name: remote-controller-apk
          path: "bin/*.apk"
          if-no-files-found: error
