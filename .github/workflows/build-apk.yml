name: Build Android APK

on:
    push:
        branches: [main]
    workflow_dispatch:

jobs:
    build:
        runs-on: ubuntu-latest

        steps:
            - uses: actions/checkout@v4

            - name: Set up Python
              uses: actions/setup-python@v4
              with:
                  python-version: "3.11"

            - name: Install system dependencies
              run: |
                  sudo apt-get update
                  sudo apt-get install -y python3-pip build-essential git zip unzip openjdk-11-jdk wget curl
                  sudo apt-get install -y python3-setuptools python3-dev libffi-dev libssl-dev

            - name: Install Python dependencies
              run: |
                  pip install --upgrade pip
                  pip install cython==0.29.33
                  pip install buildozer
                  pip install python-for-android

            - name: Setup Android SDK
              run: |
                  mkdir -p /home/runner/android-sdk/cmdline-tools
                  cd /home/runner
                  wget -q https://dl.google.com/android/repository/commandlinetools-linux-6514223_latest.zip
                  unzip -q commandlinetools-linux-6514223_latest.zip
                  mv tools /home/runner/android-sdk/cmdline-tools/latest

                  # Accept licenses
                  mkdir -p /home/runner/android-sdk/licenses
                  echo "24333f8a63b6825ea9c5514f83c2829b004d1fee" > /home/runner/android-sdk/licenses/android-sdk-license
                  echo "d975f751698a77b662f1254ddbeed3901e976f5a" > /home/runner/android-sdk/licenses/intel-android-extra-license

                  # Set environment variables
                  echo "ANDROID_HOME=/home/runner/android-sdk" >> $GITHUB_ENV
                  echo "ANDROID_SDK_ROOT=/home/runner/android-sdk" >> $GITHUB_ENV
                  echo "/home/runner/android-sdk/cmdline-tools/latest/bin" >> $GITHUB_PATH
                  echo "/home/runner/android-sdk/platform-tools" >> $GITHUB_PATH

                  # Install required packages with AIDL support
                  /home/runner/android-sdk/cmdline-tools/latest/bin/sdkmanager --update
                  /home/runner/android-sdk/cmdline-tools/latest/bin/sdkmanager "platform-tools" "platforms;android-29" "platforms;android-33" "build-tools;29.0.3" "build-tools;33.0.0" "ndk;21.4.7075529"
                  
                  # Verify AIDL is available
                  ls -la /home/runner/android-sdk/build-tools/29.0.3/aidl || echo "AIDL not found in build-tools"
                  ls -la /home/runner/android-sdk/build-tools/33.0.0/aidl || echo "AIDL not found in newer build-tools"
                  
                  # Add build-tools to PATH so buildozer can find aidl
                  echo "/home/runner/android-sdk/build-tools/29.0.3" >> $GITHUB_PATH
                  echo "/home/runner/android-sdk/build-tools/33.0.0" >> $GITHUB_PATH

            - name: Verify Android Setup
              run: |
                  echo "=== Android SDK Setup Verification ==="
                  echo "ANDROID_HOME: $ANDROID_HOME"
                  echo "ANDROID_SDK_ROOT: $ANDROID_SDK_ROOT"
                  echo "PATH includes:"
                  echo $PATH | tr ':' '\n' | grep android
                  echo ""
                  echo "Looking for AIDL binary:"
                  find /home/runner/android-sdk -name "aidl" -type f 2>/dev/null || echo "AIDL not found!"
                  echo ""
                  echo "Testing AIDL command:"
                  which aidl || echo "AIDL not in PATH"
                  /home/runner/android-sdk/build-tools/29.0.3/aidl --help 2>/dev/null | head -3 || echo "Cannot run AIDL"

            - name: Build APK
              run: |
                  echo "=== Starting APK Build ==="
                  buildozer android debug

            - name: Find APK
              run: |
                  find . -name "*.apk" -type f
                  ls -la bin/ || echo "No bin directory"

            - name: Upload APK
              uses: actions/upload-artifact@v4
              with:
                  name: remote-controller-apk
                  path: "bin/*.apk"
                  if-no-files-found: error
